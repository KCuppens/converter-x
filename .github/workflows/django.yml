name: Django CI

on:
  pull_request:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  AWS_STORAGE_BUCKET_NAME: "${{ secrets.AWS_STORAGE_BUCKET_NAME }}"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_NAME: test_db
      DB_USER: root
      DB_PASSWORD: root
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_NAME }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
        mysql -e 'SHOW DATABASES;' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
    - name: Install Dependencies
      run: |
        sudo apt-get install pandoc
        sudo apt-get install -y calibre
        sudo apt-get install libreoffice-writer
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -r requirements/local.txt  
    - name: Migrate DB
      run: |
        python manage.py migrate --settings=converterx.settings.local
    - name: Run code quality checks
      run: |
        pre-commit run --all flake8
    - name: Run Tests
      run: |
        pytest --cov=. --cov-config=setup.cfg
      env:
          DEBUG: True
          SYSTEM_ENV: GITHUB_WORKFLOW
